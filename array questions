array practice
que 1.Given a number N, find the first N Fibonacci numbers. The first two number of the series are 1 and 1.
code:
class Solution
{
    //Function to return list containing first n fibonacci numbers.
    public static long[] printFibb(int n) 
    {
        long[] arr = new long[n];
        arr[0] = 1; 
        if (n==1) {
            return arr;
        }
        arr[1] = 1;
        if (n==2) {
            return arr;
        }
        for (int i=2; i<n; i++) {
            arr[i] = arr[i-1] + arr[i-2];
        }
        return arr;
    }
}



que 2.Given a sorted array of size N and an integer K, find the position(0-based indexing) at which K is present in the array using binary search
code:

class Solution {
    int binarysearch(int arr[], int n, int k) {
        // code here
        int start=0;
        int end=arr.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(arr[mid]==k)
            {
                return mid;
                
            }
            
            else if(arr[mid]<k){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
            
        }
        return -1;
    }
}
